definitions:
  models.Accident:
    properties:
      accident_character:
        $ref: '#/definitions/models.AccidentCharacter'
      id:
        type: integer
      name:
        type: string
    type: object
  models.AccidentCharacter:
    properties:
      id:
        type: integer
      name:
        type: string
      specialization:
        $ref: '#/definitions/models.Specialization'
    type: object
  models.Appeal:
    properties:
      accident:
        $ref: '#/definitions/models.Accident'
      additional_number:
        type: string
      address:
        type: string
      applicant_name:
        type: string
      applicant_number:
        type: string
      application:
        $ref: '#/definitions/models.Application'
      create_date:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
    type: object
  models.Application:
    properties:
      accident:
        $ref: '#/definitions/models.Accident'
      address:
        type: string
      brigade:
        $ref: '#/definitions/models.Brigade'
      cause:
        type: string
      create_date:
        type: string
      damage_point:
        type: string
      damage_type:
        $ref: '#/definitions/models.Damage'
      description:
        type: string
      id:
        type: integer
      importance:
        $ref: '#/definitions/models.Importance'
      material:
        $ref: '#/definitions/models.Material'
      status:
        $ref: '#/definitions/models.Status'
    type: object
  models.Brigade:
    properties:
      brigadir:
        $ref: '#/definitions/models.User'
      id:
        type: integer
      people_count:
        type: integer
    type: object
  models.Damage:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Importance:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Material:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Shutdown:
    properties:
      accident:
        $ref: '#/definitions/models.Accident'
      address:
        type: string
      application:
        $ref: '#/definitions/models.Application'
      date:
        type: string
      day_count:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
    type: object
  models.Specialization:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Statistic:
    properties:
      appeals:
        type: integer
      appeals_applications:
        description: Обращения к которым прикреплена заявка
        type: integer
      applications:
        type: integer
      shutdowns:
        type: integer
    type: object
  models.Status:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.User:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/accidents:
    get:
      description: Возвращает список всех аварий
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Accident'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить все аварии
      tags:
      - Аварии
  /api/accidents/{id}:
    get:
      description: Возвращает информацию об аварии по указанному ID
      parameters:
      - description: ID аварии
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Accident'
        "404":
          description: Авария не найдена
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить информацию об аварии по ID
      tags:
      - Аварии
  /api/appeals:
    get:
      description: Возвращает список всех обращений
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Appeal'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить все обращения
      tags:
      - Обращения
    post:
      consumes:
      - application/json
      description: Добавляет новое обращение в систему
      parameters:
      - description: Данные обращения
        in: body
        name: appeal
        required: true
        schema:
          $ref: '#/definitions/models.Appeal'
      produces:
      - application/json
      responses:
        "201":
          description: ID созданного обращения
          schema:
            type: integer
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать обращение
      tags:
      - Обращения
    put:
      consumes:
      - application/json
      description: Обновляет данные существующего обращения
      parameters:
      - description: Обновленные данные обращения
        in: body
        name: appeal
        required: true
        schema:
          $ref: '#/definitions/models.Appeal'
      produces:
      - application/json
      responses:
        "200":
          description: Обращение обновлено
          schema:
            type: string
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Обновить обращение
      tags:
      - Обращения
  /api/appeals/{id}:
    delete:
      description: Удаляет обращение по ID
      parameters:
      - description: ID обращения
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Обращение удалено
          schema:
            type: string
        "404":
          description: Обращение не найдено
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Удалить обращение
      tags:
      - Обращения
    get:
      description: Возвращает информацию об обращении по ID
      parameters:
      - description: ID обращения
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Appeal'
        "404":
          description: Обращение не найдено
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить обращение по ID
      tags:
      - Обращения
  /api/applications:
    get:
      description: Возвращает список всех заявок
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Application'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение всех заявок
      tags:
      - Заявки
    post:
      consumes:
      - application/json
      description: Создает новую заявку с переданными данными и возвращает её ID
      parameters:
      - description: Заявка
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/models.Application'
      produces:
      - application/json
      responses:
        "200":
          description: ID новой заявки
          schema:
            type: integer
        "400":
          description: Неверные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создание новой заявки
      tags:
      - Заявки
    put:
      consumes:
      - application/json
      description: Обновляет информацию о заявке по переданным данным
      parameters:
      - description: Обновленная заявка
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/models.Application'
      produces:
      - application/json
      responses:
        "200":
          description: Заявка обновлена
          schema:
            type: string
        "400":
          description: Неверные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Обновление заявки
      tags:
      - Заявки
  /api/applications/{id}:
    delete:
      description: Удаляет заявку по указанному ID
      parameters:
      - description: ID заявки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Заявка удалена
          schema:
            type: string
        "404":
          description: Заявка не найдена
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Удаление заявки
      tags:
      - Заявки
    get:
      description: Возвращает заявку с указанным ID
      parameters:
      - description: ID заявки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Application'
        "404":
          description: Заявка не найдена
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение заявки по ID
      tags:
      - Заявки
  /api/characters:
    get:
      description: Возвращает список всех характеров аварий
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AccidentCharacter'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение всех характеров аварий
      tags:
      - Характеры аварий
  /api/characters/{id}:
    get:
      description: Возвращает информацию о характере аварии с указанным ID
      parameters:
      - description: ID характера аварии
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccidentCharacter'
        "404":
          description: Характер аварии не найден
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение информации о характере аварии по ID
      tags:
      - Характеры аварий
  /api/damages:
    get:
      description: Возвращает список всех типов повреждений
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Damage'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение всех типов повреждений
      tags:
      - Повреждения
  /api/history/appeals:
    get:
      consumes:
      - application/json
      description: Получение списка всех обращений, которые были созданы более 6 месяцев
        назад.
      produces:
      - application/json
      responses:
        "200":
          description: Список обращений
          schema:
            items:
              $ref: '#/definitions/models.Appeal'
            type: array
      tags:
      - History
  /api/history/applications:
    get:
      consumes:
      - application/json
      description: Получение списка заявок, где id_status = 3 (например, завершённые
        или обработанные заявки).
      produces:
      - application/json
      responses:
        "200":
          description: Список заявок
          schema:
            items:
              $ref: '#/definitions/models.Application'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      tags:
      - History
  /api/history/shutdowns:
    get:
      consumes:
      - application/json
      description: Получение списка отключений с состоянием `is_active = false`.
      produces:
      - application/json
      responses:
        "200":
          description: Список отключений
          schema:
            items:
              $ref: '#/definitions/models.Shutdown'
            type: array
      tags:
      - History
  /api/importance:
    get:
      consumes:
      - application/json
      description: Получение списка всех важностей.
      produces:
      - application/json
      responses:
        "200":
          description: Список важностей
          schema:
            items:
              $ref: '#/definitions/models.Importance'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      tags:
      - Importance
  /api/importance/{id}:
    get:
      consumes:
      - application/json
      description: Получение информации о важности по заданному ID.
      parameters:
      - description: ID важности
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о важности
          schema:
            $ref: '#/definitions/models.Importance'
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      tags:
      - Importance
  /api/materials:
    get:
      consumes:
      - application/json
      description: Получение списка всех типов материалов.
      produces:
      - application/json
      responses:
        "200":
          description: Список типов материалов
          schema:
            items:
              $ref: '#/definitions/models.Material'
            type: array
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      tags:
      - Material
  /api/shutdowns:
    get:
      consumes:
      - application/json
      description: Получение списка всех отключений
      produces:
      - application/json
      responses:
        "200":
          description: Список всех отключений
          schema:
            items:
              $ref: '#/definitions/models.Shutdown'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение всех отключений
      tags:
      - Shutdown
    post:
      consumes:
      - application/json
      description: Создает новое отключение с указанными параметрами
      parameters:
      - description: Информация о новом отключении
        in: body
        name: shutdown
        required: true
        schema:
          $ref: '#/definitions/models.Shutdown'
      produces:
      - application/json
      responses:
        "201":
          description: ID созданного отключения
          schema:
            type: integer
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создание нового отключения
      tags:
      - Shutdown
    put:
      consumes:
      - application/json
      description: Обновляет информацию об отключении по его ID
      parameters:
      - description: Обновление данных отключения
        in: body
        name: shutdown
        required: true
        schema:
          $ref: '#/definitions/models.Shutdown'
      produces:
      - application/json
      responses:
        "200":
          description: Отключение обновлено
          schema:
            type: string
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "404":
          description: Отключение не найдено
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Обновление отключения
      tags:
      - Shutdown
  /api/shutdowns/{id}:
    get:
      consumes:
      - application/json
      description: Получение информации о конкретном отключении по его ID
      parameters:
      - description: ID отключения
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о отключении
          schema:
            $ref: '#/definitions/models.Shutdown'
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "404":
          description: Отключение не найдено
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение отключения по ID
      tags:
      - Shutdown
  /api/specializations:
    get:
      consumes:
      - application/json
      description: Получение списка всех специализаций
      produces:
      - application/json
      responses:
        "200":
          description: Список всех специализаций
          schema:
            items:
              $ref: '#/definitions/models.Specialization'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение всех специализаций
      tags:
      - Specialization
  /api/specializations/{id}:
    get:
      consumes:
      - application/json
      description: Получение информации о специализации по ее ID
      parameters:
      - description: ID специализации
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о специализации
          schema:
            $ref: '#/definitions/models.Specialization'
        "400":
          description: Ошибка запроса
          schema:
            type: string
        "404":
          description: Специализация не найдена
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение специализации по ID
      tags:
      - Specialization
  /api/statistics:
    get:
      consumes:
      - application/json
      description: Получение статистики по числу обращений, заявок и отключений за
        текущий месяц
      produces:
      - application/json
      responses:
        "200":
          description: Статистика за текущий месяц
          schema:
            $ref: '#/definitions/models.Statistic'
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение статистики за текущий месяц
      tags:
      - Statistic
  /api/statuses:
    get:
      consumes:
      - application/json
      description: Получение списка всех статусов в системе
      produces:
      - application/json
      responses:
        "200":
          description: Список всех статусов
          schema:
            items:
              $ref: '#/definitions/models.Status'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение списка всех статусов
      tags:
      - Status
  /api/statuses/{id}:
    get:
      consumes:
      - application/json
      description: Получение статуса по его ID
      parameters:
      - description: ID статуса
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о статусе
          schema:
            $ref: '#/definitions/models.Status'
        "400":
          description: Неверный запрос
          schema:
            type: string
        "404":
          description: Статус не найден
          schema:
            type: string
        "500":
          description: Ошибка на сервере
          schema:
            type: string
      summary: Получение информации о статусе по ID
      tags:
      - Status
  /auth/login:
    post:
      consumes:
      - application/json
      description: Выполняет аутентификацию пользователя по логину и паролю, возвращает
        JWT токен.
      parameters:
      - description: Пользовательские данные
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: JWT токен
          schema:
            type: string
        "400":
          description: Ошибка аутентификации
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
        "500":
          description: Ошибка создания токена
          schema:
            type: string
      summary: Аутентификация пользователя
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя с указанными данными.
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: ID зарегистрированного пользователя
          schema:
            type: integer
        "400":
          description: Ошибка регистрации
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Регистрация нового пользователя
      tags:
      - User
swagger: "2.0"
